install.packages(c("parameters", "stableGR"))
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(rstanarm)
library(bayesplot)
library(bayestestR)
library(parameters)
library(knitr)
library(magrittr)
library(stableGR)
quiz_data <- read_csv("quiz.csv")
model1 <- stan_glm(var1 ~ var2 + var3 , data = quiz_data, iter = 4000)
# not var2 * var3 which is what you would use if you wanted interaction
plot(model1, plotfun = "trace")
# You could have used the pars argument if you wanted to specify the variables
describe_posterior(model1, ci = .9) # or
hdi(model1, ci=.9) # or
model_parameters(model1, ci = .9)
model2 <- stan_glmer(var5 ~ var6 + (1 | group_var) , data = quiz_data, adapt_delta = 0.99, iter = 8000, cores = 4)
pp_check(model2)
describe_posterior(model2, centrality = "Mean") # or
model_parameters(model2, centrality = "Mean") # or
summary(model2)
# For the first two, it doesn't seem to matter if you use mean or Mean
plot(model2, plotfun = "dens", pars = c("(Intercept)", "var6", "sigma"))
model2 %>%
as.data.frame() %$%
mean(var6 > 7.5)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(rstanarm)
library(bayesplot)
library(bayestestR)
library(parameters)
library(knitr)
library(magrittr)
library(stableGR)
describe_posterior(model1, ci = .9) # or
describe_posterior(model1, ci = .9, test = c("p_direction", "rope"))
hdi(model1, ci=.9) # or
model_parameters(model1, ci = .9)
#describe_posterior(model1, ci = .9) # or
describe_posterior(model1, ci = .9, test = c("p_direction", "rope"))
#hdi(model1, ci=.9) # or
#model_parameters(model1, ci = .9)
#describe_posterior(model1, ci = .9) # or
describe_posterior(model1, ci = .9, test = c("Intercept"))
describe_posterior(model1, ci = .9) # or
hdi(model1, ci=.9) # or
model_parameters(model1, ci = .9)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(rstanarm)
library(bayesplot)
library(bayestestR)
library(parameters)
library(knitr)
library(magrittr)
library(stableGR)
plot(model2, plotfun = "dens", pars = c("(Intercept)", "var6", "sigma"))
plot(model2, plotfun = "dens", pars = c("var6", "sigma"))
describe_posterior(model1, ci = .9) # or
hdi(model1, ci=.9, pars=c("var2")) # or
model_parameters(model1, ci = .9)
describe_posterior(model1, ci = .9) # or
hdi(model1, ci=.9) # or
model_parameters(model1, ci = .9)
